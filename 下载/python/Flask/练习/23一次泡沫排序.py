# 概述
# Bubblesort是一种低效的排序算法，易于理解，因此经常在计算机科学入门课程中教授，作为如何不对列表进行排序的示例。尽管如此，从某种意义上说，它是正确的，因为它在执行完成时最终会生成原始列表的排序版本。

# Bubblesort的核心是所谓的通行证。让我们看一个关于通行证如何工作的示例。

# 请考虑以下列表：

# 9, 7, 5, 3, 1, 2, 4, 6, 8
# 我们通过比较列表的前两个元素来启动传递。第一个元素是否大于第二个元素？如果是这样，我们交换这两个元素。由于大于本例，我们交换它们以给予.然后，列表将变为：977, 9

# 7, 9, 5, 3, 1, 2, 4, 6, 8
# 然后，我们继续第 2 和第 3 元素、第 3 和第 4 元素的过程......一直到最后两个元素。通票完成后，我们的列表变为：

# 7, 5, 3, 1, 2, 4, 6, 8, 9
# 请注意，最大值“冒泡”到列表末尾。这正是Bubblesort得名的原因。9

# 任务
# 给定一个整数数组，您的函数 //（或等效的，取决于您的语言的命名约定）应该返回一个新数组，相当于对原始数组执行 1 次完整传递。你的函数应该是纯的，即它不应该改变输入数组。bubblesortOncebubblesort_onceBubblesortOnce
l=[9, 7, 5, 3, 1, 2, 4, 6, 8]
print(id(l))
def bubblesort_once(l):
    c=[]
    for n in l:
        c.append(n)
    for i in range(0,len(c)-1):
        if(c[i])>c[i+1]:
            c[i],c[i+1]=c[i+1],c[i]
    return c
print(bubblesort_once(l))
